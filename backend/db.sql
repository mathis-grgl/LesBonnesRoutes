BEGIN;

CREATE TABLE IF NOT EXISTS COMPTE(
	idCompte INTEGER PRIMARY KEY AUTOINCREMENT,
	nomCompte TEXT NOT NULL,
	prenomCompte TEXT NOT NULL,
	email TEXT NOT NULL,
	genre TEXT NOT NULL,
	voiture INTEGER NOT NULL,
	telephone INTEGER NOT NULL,
	mdp TEXT NOT NULL,
	notificationMail INTEGER NOT NULL,
	typeCompte TEXT NOT NULL,
	noteCompte INTEGER NULL
);

CREATE TABLE IF NOT EXISTS TOKEN(
    idCompte INTEGER,
    auth_token BLOB NOT NULL,
    expiration TEXT NOT NULL,
    FOREIGN KEY(idCompte) REFERENCES COMPTE(idCompte)
);


CREATE TABLE IF NOT EXISTS PASSAGER(
	idCompte INTEGER,
	FOREIGN KEY(idCompte) REFERENCES COMPTE(idCompte)
);


CREATE TABLE IF NOT EXISTS CONDUCTEUR(
	idCompte INTEGER,
	FOREIGN KEY(idCompte) REFERENCES COMPTE(idCompte)
);


CREATE TABLE IF NOT EXISTS VILLE(
	idVille INTEGER PRIMARY KEY AUTOINCREMENT,
	nomVille TEXT NOT NULL,
	codePostal TEXT NOT NULL
);

CREATE TABLE IF NOT EXISTS TRAJET(
idTrajet INTEGER PRIMARY KEY AUTOINCREMENT,
idConducteur INTEGER,
heureDepart TEXT NOT NULL,
dateDepart TEXT NOT NULL,
nbPlaces INTEGER NOT NULL,
prix INTEGER NOT NULL,
nbPlacesRestantes INTEGER NOT NULL,
statusTrajet TEXT NOT NULL,
commentaires TEXT NULL,
precisionRdv TEXT NULL,
villeDepart INTEGER,
villeArrivee INTEGER,
FOREIGN KEY(idConducteur) REFERENCES COMPTE(idCompte),
FOREIGN KEY(villeDepart) REFERENCES VILLE(idVille),
FOREIGN KEY(villeArrivee) REFERENCES VILLE(idVille)
);


CREATE TABLE IF NOT EXISTS TRAJET_EN_COURS_PASSAGER(
	idCompte INTEGER,
	idTrajet INTEGER,
	PRIMARY KEY(idCompte, idTrajet),
	FOREIGN KEY(idCompte) REFERENCES COMPTE(idCompte)
);

CREATE TABLE IF NOT EXISTS DEMANDE_TRAJET_EN_COURS(
	idCompte INTEGER,
	idTrajet INTEGER,
	status TEXT NOT NULL,
	PRIMARY KEY(idCompte, idTrajet),
	FOREIGN KEY(idCompte) REFERENCES COMPTE(idCompte),
	FOREIGN KEY(idTrajet) REFERENCES TRAJET(idTrajet)
);

CREATE TABLE IF NOT EXISTS HISTORIQUE_TRAJET(
	idCompte INTEGER,
	idTrajet INTEGER,
	PRIMARY KEY(idCompte, idTrajet),
	FOREIGN KEY(idCompte) REFERENCES COMPTE(idCompte),
	FOREIGN KEY(idTrajet) REFERENCES TRAJET(idTrajet)
);

CREATE TABLE IF NOT EXISTS TRAJET_PUBLIC(
	idTrajet INTEGER PRIMARY KEY,
	FOREIGN KEY(idTrajet) REFERENCES TRAJET(idTrajet)
);

CREATE TABLE IF NOT EXISTS GROUPE(
	idGroupe INTEGER PRIMARY KEY AUTOINCREMENT,
	nomGroupe TEXT NOT NULL,
	nbPersonnes INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS AMI_GROUPE(
	idCompte INTEGER,
	idGroupe INTEGER,
	PRIMARY KEY(idCompte, idGroupe),
	FOREIGN KEY(idCompte) REFERENCES COMPTE(idCompte),
	FOREIGN KEY(idGroupe) REFERENCES GROUPE(idGroupe)
);

CREATE TABLE IF NOT EXISTS TRAJET_PRIVE(
	idTrajet INTEGER PRIMARY KEY,
	idGroupe INTEGER,
	FOREIGN KEY(idTrajet) REFERENCES TRAJET(idTrajet),
	FOREIGN KEY(idGroupe) REFERENCES GROUPE(idGroupe)
);

CREATE TABLE IF NOT EXISTS VILLE_TRAVERSEE(
    idTrajet INTEGER,
    idVille INTEGER,
    PRIMARY KEY(idTrajet, idVille),
    FOREIGN KEY(idTrajet) REFERENCES TRAJET(idTrajet),
    FOREIGN KEY(idVille) REFERENCES VILLE(idVille)
);

CREATE TABLE IF NOT EXISTS RECHERCHE_EN_ATTENTE(
	idCompte INTEGER,
	nbPlaces INTEGER NULL,
	prix_max INTEGER NULL,
	villeDebut INTEGER,
	villeFin INTEGER,
	FOREIGN KEY(idCompte) REFERENCES COMPTE(idCompte),
	FOREIGN KEY(villeDebut) REFERENCES VILLE(idVille),
	FOREIGN KEY(villeFin) REFERENCES VILLE(idVille) 
);

CREATE TABLE IF NOT EXISTS NOTE(
	idNote INTEGER PRIMARY KEY AUTOINCREMENT,
	idTrajet INTEGER,
	idCompteNotant INTEGER,
	idCompteNote INTEGER,
	note INTEGER NULL,
	FOREIGN KEY(idNote) REFERENCES NOTE(idNote),
	FOREIGN KEY(idTrajet) REFERENCES TRAJET(idTrajet),
	FOREIGN KEY(idCompteNotant) REFERENCES COMPTE(idCompte),
	FOREIGN KEY(idCompteNote) REFERENCES COMPTE(idCompte)
);

CREATE TABLE IF NOT EXISTS NOTIFICATION(
	idNotification INTEGER PRIMARY KEY AUTOINCREMENT,
	idCompteEnvoyeur INTEGER,
    messageNotification TEXT NOT NULL,
    FOREIGN KEY(idCompteEnvoyeur) REFERENCES COMPTE(idCompte)
);

CREATE TABLE IF NOT EXISTS NOTIF_TRAJET(
	idNotification INTEGER PRIMARY KEY,
	idTrajet INTEGER,
	FOREIGN KEY(idNotification) REFERENCES NOTIFICATION(idNotification),
    FOREIGN KEY(idTrajet) REFERENCES TRAJET(idTrajet) 
);

CREATE TABLE IF NOT EXISTS NOTIF_GROUPE(
	idNotification INTEGER PRIMARY KEY,
	idGroupe INTEGER,
	FOREIGN KEY(idNotification) REFERENCES NOTIFICATION(idNotification),
	FOREIGN KEY(idGroupe) REFERENCES GROUPE(idGroupe) 
);

CREATE TABLE IF NOT EXISTS NOTIF_RECUE(
	idCompte INTEGER,
	idNotification INTEGER,
	PRIMARY KEY(idCompte, idNotification),
    FOREIGN KEY(idCompte) REFERENCES COMPTE(idCompte),
	FOREIGN KEY(idNotification) REFERENCES NOTIFICATION(idNotification) 
);

COMMIT;